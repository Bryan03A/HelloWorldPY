name: Deploy to EC2 via Load Balancer

on:
  push:
    branches:
      - main  # Cambia por tu rama principal si es diferente

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up SSH
      run: |
        # Crear la carpeta .ssh si no existe
        mkdir -p $HOME/.ssh  
        
        # Establecer permisos aaaapara la carpeta .ssh (solo el usuario actual puede escribir en ella)
        chmod 700 $HOME/.ssh
        
        # Guardar la clave privada SSH desde el secreto y darle permisos adecuados
        echo "${{ secrets.EC2_SSH_KEY }}" > $HOME/.ssh/id_rsa  # Guarda la clave privada SSH
        chmod 600 $HOME/.ssh/id_rsa  # Los permisos deben ser 600 (lectura y escritura solo para el propietario)
        
        # Agregar la clave pública del ALB a known_hosts para evitar advertencias de seguridad
        ssh-keyscan -H HelloWorldALB-755227875.us-east-1.elb.amazonaws.com >> $HOME/.ssh/known_hosts
        
        # Establecer permisos adecuados para known_hosts
        chmod 644 $HOME/.ssh/known_hosts  # Los permisos deben ser 644 (lectura y escritura para el propietario, solo lectura para otros)

    - name: Deploy to EC2 instances behind ELB
      run: |
        ssh -i $HOME/.ssh/id_rsa ec2-user@HelloWorldALB-755227875.us-east-1.elb.amazonaws.com << 'EOF'
          cd HelloWorldPY  # Cambia a la carpeta de tu aplicación en la EC2
          git pull  # Trae los últimos cambios
          pkill -f python  # Detiene cualquier instancia previa de la aplicación
          nohup python3 app.py > app.log 2>&1 &  # Ejecuta la aplicación en segundo plano
        EOF