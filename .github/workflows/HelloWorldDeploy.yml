name: Deploy to EC2

on:
  push:
    branches:
      - main  # Change 'main' if you're using another branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2
        # The "checkout" step usually doesn't take much time, so we keep it.
      - name: Log checkout step
        run: echo "Checked out the code from the repository."

      # 2. Set up SSH to connect to EC2
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.HelloWorldSecret }}
      - name: Log SSH setup
        run: echo "SSH keys have been configured to connect to EC2."

      # 3. Set up Python and dependencies (with cache to speed up)
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Log Python setup
        run: echo "Python environment has been set up."

      # 4. Use pip cache to avoid reinstalling dependencies every time
      - name: Cache Python dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Log cache step
        run: echo "Cached Python dependencies to speed up future runs."

      # 5. Install dependencies only if there are changes in requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Log install step
        run: echo "Python dependencies have been installed or updated."

      # 6. Deploy to EC2 and restart the service
      - name: Deploy to EC2
        run: |
          echo "Connecting to EC2..."
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.HelloWorldSecretIP }} << 'EOF'
            cd /home/ec2-user/HelloWorldPY
            # Only perform git pull if necessary (if there are changes in the code)
            git pull origin main
            sudo systemctl restart flaskapp  # Assuming your service is called flaskapp
          EOF
      - name: Log deployment step
        run: echo "Deployed changes to EC2 and restarted the flaskapp service."
